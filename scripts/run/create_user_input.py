# -*- coding: utf-8 -*-
"""
/***************************************************************************
 Loop3DModelGenDockWidget
								 A QGIS plugin
 This plugin preprocess map layers using map2loop and use its output for 3D modelling using LoopStructural.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
							 -------------------
		begin                : 2024-12-13
		git sha              : $Format:%H$
		copyright            : (C) 2024 by Center of Exploration Targeting, UWA
		email                : michel.nzikoumamboukou@uwa.edu.au
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""



from PyQt5.QtWidgets import QMessageBox,QLineEdit,QDialog, QVBoxLayout, QPushButton, QLabel, QWidget

class VerticalLayoutForm():
	def __init__(self):
	  self.labels = ['Name', 'Institution', 'Server Name', 'Port Number']

	def generate_user_form_button(self):
		layout = QVBoxLayout()
		dialog = QDialog()
		dialog.setWindowTitle("Select Server")
		
		self.lineedit_features = {}

		for label_text in self.labels:
			label = QLabel(label_text)
			line_edit = QLineEdit()
			self.lineedit_features[label_text] = line_edit
			layout.addWidget(label)
			layout.addWidget(line_edit)

		self.ok_button = QPushButton("OK")
		layout.addWidget(self.ok_button)

		#self.sefrom 
		

	def create_vertical_form(self):
	    # Create the main widget
	    form_widget = QWidget()
	    layout = QVBoxLayout()

	    # Define labels and line edits
	    #labels = ["Name:", "Address:", "City:", "Country:"]
	    line_edits = []

	    for label_text in self.labels:
	        label = QLabel(label_text)
	        line_edit = QLineEdit()
	        layout.addWidget(label)
	        layout.addWidget(line_edit)
	        line_edits.append(line_edit)

	    # Set the layout
	    form_widget.setLayout(layout)

	    return form_widget, line_edits  # Return widget and line edits for later access

# # Usage Example in PyQGIS
# form, fields = create_vertical_form()
# form.show()  # Show the form
# tLayout(layout)
